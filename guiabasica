
docker run -d -p 3307:3306 --net spring-net --name mysqldb --env-file env -v "db":/var/lib/mysql mysql

docker run -d -p 3307:3306 --name mysqldb -e MYSQL_ROOT_PASSWORD=Campeon10+ -e MYSQL_DATABASE=lairentcg mysql


docker run -p 9090:8080 --name lairenback --net spring-net -e MYSQL_HOST=mysqldb -e MYSQL_USER=root -e MYSQL_PASSWORD=Campeon10+ -e MYSQL_PORT=3306 back




____________________________

primer paso instalar docker y git en la vps
crear carpeta para el back y el front y clonar repositorios en cada uno
crear los env files que tiene que tener cada uno
crear docker network para poder conectar todos los containers
descargar imagen de mysql de docker
crear imagen para el back y el front
el front requiere un

docker run -d -p 3307:3306 --net spring-net --name mysqldb --env-file mysqlenv -v "/home/kyle/Desktop/db":/var/lib/mysql mysql

docker run -d -p 9090:8080 --name lairenback --net spring-net --env-file env back

docker run -d -p 4200:80 --name lairenfront front


docker run -d -p 3308:3306 --net spring-net --name mysqlwp --env-file wpsqlenv -v "/home/kyle/Desktop/dbwp":/var/lib/mysql mysql

docker run -d -p 4040:80 --net spring-net --name lairenwp --env-file wpenv wordpress

docker run -p 4040:80 --name lairenwp --network spring-net -d wordpress





ESTO SER√çA EL DOCKER COMPOSE.YML:


version: '3.8'

services:
  mysql:
    image: 'mysql:8.0'
    restart: always
    environment:
      MYSQL_DATABASE: lairentcg
      MYSQL_USER: messi
      MYSQL_PASSWORD: Campeon10+
      MYSQL_ROOT_PASSWORD: Campeon10+
    volumes:
      - 'mysql_data:/var/lib/mysql'
      - './mysql-config/my.cnf:/etc/mysql/my.cnf'
    networks:
      - backend

  spring_app:
    build: ./backend/lairen-back
    restart: always
    depends_on:
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: production
    volumes:
      - 'spring_app:/app'
      - ./backend/certs:/app/certs
    networks:
      - backend
    ports:
      - '8443:8443'

  angular_app:
    build: ./frontend/lairenfrontnuevo
    restart: always
    ports:
      - '80:80'
    networks:
      - frontend
    volumes:
      - ./backend/certs:/app/certs

networks:
  backend:
  frontend:

volumes:
  mysql_data:
  spring_app:








sudo cp /etc/letsencrypt/live/lairentcg.com.ar/fullchain.pem /home/maximus/proyecto/backend/certs
sudo cp /etc/letsencrypt/live/lairentcg.com.ar/privkey.pem /home/maximus/proyecto/backend/certs



sudo openssl pkcs12 -export -in /home/maximus/proyecto/backend/certs/fullchain.pem -inkey /home/maximus/proyecto/backend/certs/privkey.pem -out /home/maximus/proyecto/backend/certs/keystore.p12 -name lairentcg.com.ar -password pass:lairen77

